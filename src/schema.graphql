type Query {
  info: String!
  snakes(filter: String, skip: Int, first: Int, orderBy: SnakeOrderByInput): [Snake!]!
}

enum SnakeOrderByInput {
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
}

type Mutation {
  snake(name: String, description: String!): Snake!
  signup(email: String!, password: String!, firstName: String!, lastName: String!, username: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type Snake {
  id: ID!
  name: String
  description: String!
  owner: User
  createdAt: String!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  username: String!
  snakes: [Snake!]!
}